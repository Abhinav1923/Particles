{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","themes","canva","backgroundColor","color","display","width","height","App","classes","canvas","useRef","useEffect","current","ctx","getContext","window","innerWidth","innerHeight","particleArray","mouse","x","y","undefined","Particle","this","size","Math","random","speedX","speedY","fillStyle","beginPath","arc","PI","fill","addEventListener","e","i","push","startPaint","fillRect","length","update","draw","j","dx","dy","sqrt","strokeStyle","lineWidth","moveTo","stroke","splice","handleParticle","requestAnimationFrame","className","ref","ReactDOM","render","document","getElementById"],"mappings":"0MAGMA,EAAYC,aAAW,SAACC,GAAD,MAAa,CACxCC,MAAO,CACLC,gBAAiB,OACjBC,MAAO,OACPC,QAAS,QACTC,MAAO,QACPC,OAAQ,mBAIG,SAASC,IACtB,IAAMC,EAAUV,IACVW,EAASC,iBAAO,MA6FtB,OA3FAC,qBAAU,WACR,IAAIV,EAAQQ,EAAOG,QACfC,EAAMZ,EAAMa,WAAW,MAC3Bb,EAAMI,MAAQU,OAAOC,WACrBf,EAAMK,OAASS,OAAOE,YAAc,EAEpC,IAAIC,EAAgB,GAChBC,EAAQ,CACVC,EAAGnB,EAAMI,MAAQ,EACjBgB,OAAGC,GAKCC,EAdQ,WAeZ,aAAe,oBACbC,KAAKJ,EAAID,EAAMC,EACfI,KAAKH,EAAIF,EAAME,EACfG,KAAKC,KAAuB,EAAhBC,KAAKC,SACjBH,KAAKI,OAAyB,EAAhBF,KAAKC,SAAe,IAClCH,KAAKK,OAAyB,EAAhBH,KAAKC,SAAe,IAClCH,KAAKrB,MAAQ,QACK,IAAhBuB,KAAKC,SACL,IACgB,IAAhBD,KAAKC,SACL,IACgB,IAAhBD,KAAKC,SACL,IA3BQ,0CA6BZ,WACEH,KAAKJ,GAAmB,IAAdI,KAAKI,OACfJ,KAAKH,GAAmB,IAAdG,KAAKK,OACXL,KAAKC,KAAO,IACdD,KAAKC,MAAQ,MAjCL,kBAmCZ,WACEZ,EAAIiB,UAAYN,KAAKrB,MACrBU,EAAIkB,YACJlB,EAAImB,IAAIR,KAAKJ,EAAGI,KAAKH,EAAGG,KAAKC,KAAM,EAAa,EAAVC,KAAKO,IAC3CpB,EAAIqB,WAvCM,KA2CdnB,OAAOoB,iBAAiB,aAAa,SAACC,GACpCjB,EAAMC,EAAIgB,EAAEhB,EACZD,EAAME,EAAIe,EAAEf,EACZ,IAAK,IAAIgB,EAAI,EAAGA,EAAI,GAAIA,IACtBnB,EAAcoB,KAAK,IAAIf,MA4B3B,SAASgB,IACP1B,EAAIiB,UAAY,iBAChBjB,EAAI2B,SAAS,EAAG,EAAGvC,EAAMI,MAAOJ,EAAMK,QA1BxC,WACE,IAAK,IAAI+B,EAAI,EAAGA,EAAInB,EAAcuB,OAAQJ,IAAK,CAC7CnB,EAAcmB,GAAGK,SACjBxB,EAAcmB,GAAGM,OACjB,IAAK,IAAIC,EAAIP,EAAGO,EAAI1B,EAAcuB,OAAQG,IAAK,CAC7C,IAAIC,EAAK3B,EAAcmB,GAAGjB,EAAIF,EAAc0B,GAAGxB,EAC3C0B,EAAK5B,EAAcmB,GAAGhB,EAAIH,EAAc0B,GAAGvB,EACrCK,KAAKqB,KAAKF,EAAKA,EAAKC,EAAKA,GACzB,MACRjC,EAAIkB,YACJlB,EAAImC,YAAc9B,EAAcmB,GAAGlC,MACnCU,EAAIoC,UAAY,GAChBpC,EAAIqC,OAAOhC,EAAcmB,GAAGjB,EAAGF,EAAcmB,GAAGhB,GAEhDR,EAAIsC,UAGJjC,EAAcmB,GAAGZ,KAAO,GAC1BP,EAAckC,OAAOf,EAAG,GAGN,IAAhBX,KAAKC,SAMX0B,GACAC,sBAAsBf,GAExBA,KAQC,IAGD,8BACE,wBAAQgB,UAAW/C,EAAQP,MAAOuD,IAAK/C,MCzG7CgD,IAASC,OACP,cAACnD,EAAD,IACAoD,SAASC,eAAe,W","file":"static/js/main.480f4cc6.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((themes) => ({\n  canva: {\n    backgroundColor: '#000',\n    color: '#fff',\n    display: 'block',\n    width: '100vw',\n    height: '100vh- 64px',\n  }\n}))\n\nexport default function App() {\n  const classes = useStyles()\n  const canvas = useRef(null)\n\n  useEffect(() => {\n    let canva = canvas.current;\n    let ctx = canva.getContext('2d');\n    canva.width = window.innerWidth\n    canva.height = window.innerHeight - 1\n\n    let particleArray = [];\n    let mouse = {\n      x: canva.width / 2,\n      y: undefined\n    }\n\n    let hue = 0;\n\n    class Particle {\n      constructor() {\n        this.x = mouse.x;\n        this.y = mouse.y;\n        this.size = Math.random() * 8\n        this.speedX = Math.random() * 3 - 1.5\n        this.speedY = Math.random() * 3 - 1.5\n        this.color = 'rgba(' +\n          Math.random() * 255 +\n          ',' +\n          Math.random() * 255 +\n          ',' +\n          Math.random() * 255 +\n          ')';\n      }\n      update() {\n        this.x += this.speedX * 1.5;\n        this.y += this.speedY * 1.5;\n        if (this.size > 1)\n          this.size -= 0.1\n      }\n      draw() {\n        ctx.fillStyle = this.color\n        ctx.beginPath()\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2)\n        ctx.fill()\n      }\n    }\n\n    window.addEventListener('mousemove', (e) => {\n      mouse.x = e.x\n      mouse.y = e.y\n      for (let i = 0; i < 10; i++) {\n        particleArray.push(new Particle())\n      }\n    })\n\n    function handleParticle() {\n      for (let i = 0; i < particleArray.length; i++) {\n        particleArray[i].update();\n        particleArray[i].draw();\n        for (let j = i; j < particleArray.length; j++) {\n          let dx = particleArray[i].x - particleArray[j].x\n          let dy = particleArray[i].y - particleArray[j].y\n          let len = Math.sqrt(dx * dx + dy * dy)\n          if (len < 180) {\n            ctx.beginPath()\n            ctx.strokeStyle = particleArray[i].color;\n            ctx.lineWidth = 0.1;\n            ctx.moveTo(particleArray[i].x, particleArray[i].y)\n            // ctx.lineTo(particleArray[j].x,particleArray[j].y)\n            ctx.stroke()\n          }\n        }\n        if (particleArray[i].size < 1) {\n          particleArray.splice(i, 1)\n        }\n      }\n      hue = Math.random() * 360;\n    }\n\n    function startPaint() {\n      ctx.fillStyle = 'rgba(0,0,0,.1)'\n      ctx.fillRect(0, 0, canva.width, canva.height)\n      handleParticle()\n      requestAnimationFrame(startPaint);\n    }\n    startPaint()\n\n    // function drawCircle() {\n    //   ctx.fillStyle = 'blue';\n    //   ctx.beginPath();\n    //   ctx.arc(mouse.x, mouse.y, 30, 0, Math.PI * .5);\n    //   ctx.fill();\n    // }\n  }, [])\n\n  return (\n    <div>\n      <canvas className={classes.canva} ref={canvas}></canvas>\n    </div>\n  )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}